{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harold/Projects/opalytica/frontend/pages/orders/[id].js\",\n    _this = this;\n\nimport { Card, CardTitle, CardText } from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\nimport Link from 'next/link';\n\nvar OrderDetail = function OrderDetail(_ref) {\n  var order = _ref.order;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: \"/\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      body: true,\n      className: \"pointer\",\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h5\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Company - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 24\n        }, _this), order.company, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 3\n      }, _this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Quantity - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(NumberFormat, {\n          value: order.quantity,\n          displayType: \"text\",\n          thousandSeparator: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = OrderDetail;\n\nOrderDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var id, url, res, order;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = ctx.query.id;\n            url = \"\".concat(process.env.URL_API, \"/orders/\").concat(id);\n            _context.next = 4;\n            return fetch(url);\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            order = _context.sent;\n            return _context.abrupt(\"return\", {\n              order: order\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default OrderDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetail\");","map":{"version":3,"sources":["/home/harold/Projects/opalytica/frontend/pages/orders/[id].js"],"names":["Card","CardTitle","CardText","NumberFormat","Link","OrderDetail","order","company","quantity","getInitialProps","ctx","id","query","url","process","env","URL_API","fetch","res","json"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC/B,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAC,SAArB;AAAA,8BACJ,QAAC,SAAD;AAAW,QAAA,GAAG,EAAC,IAAf;AAAA,qCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB,EAAiDA,KAAK,CAACC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,eADI,eAEE,QAAC,QAAD;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEE,QAAC,YAAD;AACE,UAAA,KAAK,EAAED,KAAK,CAACE,QADf;AAEE,UAAA,WAAW,EAAE,MAFf;AAGE,UAAA,iBAAiB,EAAE;AAHrB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAhBD;;KAAMH,W;;AAkBNA,WAAW,CAACI,eAAZ;AAAA,uEAA8B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,EADsB,GACjBD,GAAG,CAACE,KAAJ,CAAUD,EADO;AAEtBE,YAAAA,GAFsB,aAEbC,OAAO,CAACC,GAAR,CAAYC,OAFC,qBAEiBL,EAFjB;AAAA;AAAA,mBAGRM,KAAK,CAACJ,GAAD,CAHG;;AAAA;AAGpBK,YAAAA,GAHoB;AAAA;AAAA,mBAINA,GAAG,CAACC,IAAJ,EAJM;;AAAA;AAIpBb,YAAAA,KAJoB;AAAA,6CAKnB;AAAEA,cAAAA,KAAK,EAACA;AAAR,aALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeD,WAAf","sourcesContent":["import { Card,  CardTitle, CardText } from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\nimport Link from 'next/link'\n\nconst OrderDetail = ({order}) => {\n  return (\n    <Link href=\"/\">\n      <Card body className=\"pointer\"> \n  <CardTitle tag=\"h5\"> <strong>Company - </strong>{order.company} </CardTitle>\n        <CardText>\n        <strong>Quantity - </strong>\n          <NumberFormat\n            value={order.quantity}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />\n        </CardText>\n      </Card>\n    </Link>\n  );\n};\n\nOrderDetail.getInitialProps = async (ctx) => {\n    let id = ctx.query.id\n    let url = `${process.env.URL_API}/orders/${id}`;\n    const res = await fetch(url)\n    const order = await res.json()\n    return { order:order }\n  }\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}