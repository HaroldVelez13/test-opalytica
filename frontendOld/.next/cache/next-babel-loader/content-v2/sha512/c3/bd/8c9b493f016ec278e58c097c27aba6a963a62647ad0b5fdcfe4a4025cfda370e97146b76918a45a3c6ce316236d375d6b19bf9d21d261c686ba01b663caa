{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/harold/Projects/opalytica/frontend/pages/orders/[id].js\";\nimport { Card, CardTitle, CardText } from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\nimport Link from 'next/link';\n\nconst OrderDetail = ({\n  order\n}) => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: \"/\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      body: true,\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h5\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Company - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 24\n        }, this), order.company, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Quantity - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NumberFormat, {\n          value: order.quantity,\n          displayType: \"text\",\n          thousandSeparator: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nOrderDetail.getInitialProps = async ctx => {\n  let id = ctx.query.id;\n  let url = `${process.env.URL_API}/orders/${id}`;\n  const res = await fetch(url);\n  const order = await res.json();\n  return {\n    order: order\n  };\n};\n\nexport default OrderDetail;","map":{"version":3,"sources":["/home/harold/Projects/opalytica/frontend/pages/orders/[id].js"],"names":["Card","CardTitle","CardText","NumberFormat","Link","OrderDetail","order","company","quantity","getInitialProps","ctx","id","query","url","process","env","URL_API","res","fetch","json"],"mappings":";;AAAA,SAASA,IAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC/B,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,8BACJ,QAAC,SAAD;AAAW,QAAA,GAAG,EAAC,IAAf;AAAA,qCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArB,EAAiDA,KAAK,CAACC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEE,QAAC,QAAD;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,YAAD;AACE,UAAA,KAAK,EAAED,KAAK,CAACE,QADf;AAEE,UAAA,WAAW,EAAE,MAFf;AAGE,UAAA,iBAAiB,EAAE;AAHrB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;AAkBAH,WAAW,CAACI,eAAZ,GAA8B,MAAOC,GAAP,IAAe;AACzC,MAAIC,EAAE,GAAGD,GAAG,CAACE,KAAJ,CAAUD,EAAnB;AACA,MAAIE,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,WAAUL,EAAG,EAA9C;AACA,QAAMM,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAD,CAAvB;AACA,QAAMP,KAAK,GAAG,MAAMW,GAAG,CAACE,IAAJ,EAApB;AACA,SAAO;AAAEb,IAAAA,KAAK,EAACA;AAAR,GAAP;AACD,CANH;;AAQA,eAAeD,WAAf","sourcesContent":["import { Card,  CardTitle, CardText } from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\nimport Link from 'next/link'\n\nconst OrderDetail = ({order}) => {\n  return (\n    <Link href=\"/\">\n      <Card body>\n  <CardTitle tag=\"h5\"> <strong>Company - </strong>{order.company} </CardTitle>\n        <CardText>\n        <strong>Quantity - </strong>\n          <NumberFormat\n            value={order.quantity}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />\n        </CardText>\n      </Card>\n    </Link>\n  );\n};\n\nOrderDetail.getInitialProps = async (ctx) => {\n    let id = ctx.query.id\n    let url = `${process.env.URL_API}/orders/${id}`;\n    const res = await fetch(url)\n    const order = await res.json()\n    return { order:order }\n  }\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}