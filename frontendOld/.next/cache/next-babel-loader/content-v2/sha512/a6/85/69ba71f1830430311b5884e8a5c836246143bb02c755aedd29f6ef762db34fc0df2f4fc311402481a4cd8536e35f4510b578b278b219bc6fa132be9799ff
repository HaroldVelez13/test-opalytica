{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harold/Projects/opalytica/frontend/components/organisms/OrderForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { Button, Form, FormGroup, Label, Input, Card } from \"reactstrap\";\nexport default function OrderForm() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(fileds) {\n    var url = \"\".concat(process.env.URL_API, \"/orders/\");\n    var data = new FormData();\n    data.append('company', fileds.company);\n    data.append('quantity', fileds.quantity);\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error('Network response was not ok.');\n      }\n\n      window.history.back();\n    })[\"catch\"](console.error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    body: true,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          \"for\": \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"company\",\n          ref: register({\n            required: true\n          }),\n          placeholder: \"Company Name\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), errors.company && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: \"The field Company is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          \"for\": \"quantity\",\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"quantity\",\n          type: \"number\",\n          ref: register({\n            required: true\n          }),\n          placeholder: \"Quantity\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), errors.quantity && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: \"The field Quantity is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"lg\",\n          block: true,\n          className: \"mt-4\",\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderForm, \"CvCMr/aFHOfjpy7piEeMvygciec=\", false, function () {\n  return [useForm];\n});\n\n_c = OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/home/harold/Projects/opalytica/frontend/components/organisms/OrderForm.jsx"],"names":["useForm","Button","Form","FormGroup","Label","Input","Card","OrderForm","register","errors","handleSubmit","onSubmit","fileds","url","process","env","URL_API","data","FormData","append","company","quantity","fetch","method","headers","body","then","response","ok","Error","window","history","back","console","error","required"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Button, Form, FormGroup, Label, Input, Card } from \"reactstrap\";\n\nexport default function OrderForm() {\n  const { register, errors, handleSubmit } = useForm();\n\n  const onSubmit = (fileds) => {\n    let url = `${process.env.URL_API}/orders/`;\n    let data = new FormData()\n    data.append('company', fileds.company)\n    data.append('quantity', fileds.quantity)\n    fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type':'application/json' },\n        body: data,\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok.')\n        }\n        window.history.back()\n      }).catch(console.error)\n  };\n\n  return (\n    <Card body>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormGroup>\n          <Label for=\"company\">Company</Label>\n          <input\n            name=\"company\"\n            ref={register({ required: true })}\n            placeholder=\"Company Name\"\n            className=\"form-control\"\n          />\n          {errors.company && (\n            <small className=\"text-danger\">The field Company is required</small>\n          )}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"quantity\">Quantity</Label>\n          <input\n            name=\"quantity\"\n            type=\"number\"\n            ref={register({ required: true })}\n            placeholder=\"Quantity\"\n            className=\"form-control\"\n          />\n          {errors.quantity && (\n            <small className=\"text-danger\">The field Quantity is required</small>\n          )}\n        </FormGroup>\n        <FormGroup>\n          {\" \"}\n          <Button color=\"primary\" size=\"lg\" block className=\"mt-4\" type=\"submit\">\n            Create\n          </Button>\n        </FormGroup>\n      </form>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}